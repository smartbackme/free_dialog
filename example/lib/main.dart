import 'package:flutter/material.dart';
import 'dart:async';

import 'package:flutter/services.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:free_dialog/free_dialog.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:free_dialog/free_dialog.dart';
void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  TextEditingController? _controller;
  @override
  void initState() {
    super.initState();
    _controller = TextEditingController();
  }

  @override
  void dispose() {
    _controller?.clear();
    _controller?.dispose();
    _controller = null;
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      localizationsDelegates: [
        FreeLocalizations.delegate]..addAll(GlobalMaterialLocalizations.delegates),
      supportedLocales: const [
        Locale('en'),
        Locale('zh'),
        Locale('jp'),
      ],
      home: const DialogDemo(),
    );
  }
}






class DialogDemo extends StatefulWidget{
  const DialogDemo({Key? key}) : super(key: key);

  // AssetImage get  vd => AssetImage(assetName);


  @override
  State<StatefulWidget> createState() => DialogDemoState();





}

class DialogDemoState extends State<DialogDemo>{
  TextEditingController? _controller;
  @override
  void initState() {
    super.initState();
    _controller = TextEditingController();
  }

  @override
  void dispose() {
    _controller?.clear();
    _controller?.dispose();
    _controller = null;
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: ListView(
        children: [
          TextButton(onPressed: (){
            FreeDialog(context: context,title: "请输入文字",
                iWidget: EditWidget(_controller!),
                btnOkOnPress: (a){
                  print(a);

                },
                btnCancelOnPress: (){

                },
                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("输入文字框")),

          TextButton(onPressed: (){
            FreeDialog(context: context,title: "请选择",
                onDissmissCallback: (DismissType type){
                  print(type);

                },
                iWidget: ListWidget(["123","1233","12312","12312","12312","12312","12312","12312","12312","12312","12312","12312","12312"],(a){
                  print(a);

                },)
            ).show();
          }, child: const Text("选择框")),
          TextButton(onPressed: (){
            FreeDialog(context: context,title: "提示",
                desc
                btnOkOnPress: (a){
                  print(a);

                },
                btnCancelOnPress: (){

                },
                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("内容多dialog")),

          TextButton(onPressed: (){
            FreeDialog(context: context,title: "提示",
                desc
                btnOkOnPress: (a){
                  print(a);

                },

                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("内容多dialog，单按钮")),

          TextButton(onPressed: (){
            FreeDialog(context: context,title: "提示",
                desc: "111",
                btnOkOnPress: (a){
                  print(a);

                },

                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("内容少dialog")),

          TextButton(onPressed: (){
            FreeDialog(context: context,title: "提示",
                desc: "12312",
                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("单提示")),
          TextButton(onPressed: (){
            FreeDialog(context: context,title: "提示",
                desc: "1111",
                dismissOnTouchOutside: false,
                dismissOnBackKeyPress: false,
                btnCancelOnPress: (){

                },

                onDissmissCallback: (DismissType type){
                  print(type);

                }
            ).show();
          }, child: const Text("禁止退出 dialog")),

        ],
      ),
    );
  }

}